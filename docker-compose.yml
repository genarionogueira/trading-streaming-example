services:
  ui:
    build:
      context: ./ui-app
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_GRAPHQL_HTTP=http://localhost:8080/graphql
      - NEXT_PUBLIC_GRAPHQL_WS=ws://localhost:8080/graphql
    volumes:
      - ./data:/app/data


  position:
    build:
      context: ./position-svc
      dockerfile: Dockerfile
    ports:
      - 4000:4000
    environment:
      - NODE_ENV=production
    volumes:
      - ./data:/app/data
    depends_on:
      test-position:
        condition: service_completed_successfully

  test-position:
    build:
      context: ./position-svc
      dockerfile: Dockerfile
    command: sh -c "pip install --no-cache-dir pytest httpx pytest-asyncio && pytest -q"
    volumes:
      - ./position-svc:/app
    environment:
      - PYTHONPATH=/app/src
    depends_on: []


  data:
    build:
      context: ./data-svc
      dockerfile: Dockerfile
    ports:
      - 5001:4000
    environment:
      - NODE_ENV=production
    volumes:
      - ./data:/app/data
    depends_on:
      test-data:
        condition: service_completed_successfully

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-test:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-test
    depends_on:
      kafka:
        condition: service_healthy
    command: sleep infinity
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092


  test-data:
    build:
      context: ./data-svc
      dockerfile: Dockerfile
    command: sh -c "pip install --no-cache-dir pytest httpx pytest-asyncio && pytest -q"
    volumes:
      - ./data-svc:/app
    environment:
      - PYTHONPATH=/app/src
    depends_on: []


  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - 8080:4000
    environment:
      - NODE_ENV=development
    depends_on:
      data:
        condition: service_started
      position:
        condition: service_started
      news:
        condition: service_started

  news:
    build:
      context: ./news-svc
      dockerfile: Dockerfile
    ports:
      - 5002:4000
    environment:
      - NODE_ENV=production
    depends_on:
      test-news:
        condition: service_completed_successfully

  test-news:
    build:
      context: ./news-svc
      dockerfile: Dockerfile
    command: sh -c "pip install --no-cache-dir pytest httpx pytest-asyncio && pytest -q"
    volumes:
      - ./news-svc:/app
    environment:
      - PYTHONPATH=/app/src
    depends_on: []

